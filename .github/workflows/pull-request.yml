name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-test:
    needs: lint
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test -- --coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: coverage/

  #e2e-test:
  #  needs: lint
  #  name: E2E Tests
  #  runs-on: ubuntu-latest
  #  environment: integration
  #  steps:
  #    - uses: actions/checkout@v4

  #  - name: Setup Node.js
  #    uses: actions/setup-node@v4
  #    with:
  #      node-version: '20'
  #      cache: 'npm'

  #  - name: Install dependencies
  #    run: npm ci

  #  - name: Install Playwright browsers
  #    run: npx playwright install

  #  - name: Run E2E tests
  #    run: npm run test:e2e
  #    env:
  #      # Add all environment variables from .env.example here
  #      # They will be populated from GitHub Secrets
  #      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  #      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  #      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
  #
  #    - name: Upload E2E test results
  #      if: always()
  #      uses: actions/upload-artifact@v4
  #      with:
  #        name: playwright-report
  #        path: playwright-report/

  status-comment:
    needs: [lint, unit-test]
    name: PR Status Comment
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Create status comment
        uses: actions/github-script@v7
        with:
          script: |
            const unitTestCoverage = require('./unit-test-coverage/coverage-summary.json');
            const totalCoverage = unitTestCoverage.total.lines.pct;

            const message = `## Pull Request Check Results üéØ

            ### Coverage Report üìä
            Total coverage: ${totalCoverage}%

            ### Test Results ‚úÖ
            - Unit Tests: ${{ needs.unit-test.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}
            - E2E Tests: ${{ needs.e2e-test.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }}

            [View detailed E2E test report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
