name: Pull Request Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  check-format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run format check
        run: npm run format

  unit-test:
    needs: [lint, check-format]
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npx vitest run --coverage.enabled --coverage.provider v8 --coverage.reporter json-summary --coverage.reportsDirectory ./unit-test-coverage

      - name: Upload unit test coverage
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage
          path: unit-test-coverage/

  status-comment:
    needs: [lint, check-format, unit-test]
    name: PR Status Comment
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Create status comment
        uses: actions/github-script@v7
        with:
          script: |
            const unitTestCoverage = require('./unit-test-coverage/coverage-summary.json');
            const totalCoverage = unitTestCoverage.total.lines.pct;

            const message = `## Pull Request Check Results 🎯

            ### Coverage Report 📊
            Total coverage: ${totalCoverage}%

            ### Test Results ✅
            - Unit Tests: ${{ needs.unit-test.result == 'success' && '✅ Passed' || '❌ Failed' }}

            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
